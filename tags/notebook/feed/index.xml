<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notebook on Daniel E. Cook</title>
    <link>https://www.danielecook.com/tags/notebook/</link>
    <description>Recent content in notebook on Daniel E. Cook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sun, 20 Oct 2019 01:30:53 +0000</lastBuildDate>
    
	<atom:link href="https://www.danielecook.com/tags/notebook/feed/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Speeding up Reading and Writing in R</title>
      <link>https://www.danielecook.com/speeding-up-reading-and-writing-in-r/</link>
      <pubDate>Sun, 20 Oct 2019 01:30:53 +0000</pubDate>
      
      <guid>https://www.danielecook.com/speeding-up-reading-and-writing-in-r/</guid>
      <description>If you are relying on built-in functions to read and write large datasets you are losing out on efficiency and speed gains available through external packages in R. Below, I benchmark some of the options out there used for reading and writing files.
Sample Data First, I&amp;rsquo;ll generate a sample dataset with ten million rows we can use for testing.
Generating a test dataset library(tidyverse) library(microbenchmark) n &amp;lt;- 1e6 times &amp;lt;- 10 # Number of times to run each benchmark data &amp;lt;- data.</description>
    </item>
    
  </channel>
</rss>